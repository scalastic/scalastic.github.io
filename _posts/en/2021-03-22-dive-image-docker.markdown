---
layout: post
title: A Dive into Docker images
date: 2021-03-22 15:00:00 +2
description: How can I easily see what is in a Docker image? Dive is a tool that allows you to explore the directories and files of a docker image, the changes made in each layer of the image, and information to reduce the size of your image.
img: dive-image-docker.jpg
fig-caption: Photo by <a href="https://unsplash.com/@jamesthornton95?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">James Thornton</a> on <a href="https://unsplash.com/s/photos/diving?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
tags: [Docker, Continuous-Integration, Tool]
lang: en
permalink: /dive-image-docker/
---

Building Docker images has become commonplace in the IT world. However and despite the use of reference images, our Docker images in their repository are like black boxes that nobody really knows what they really consist of. Worse yet, in an ongoing DevOps process, there are no metrics to measure the level of optimization of our container image.

Of course, there are the commands `docker inspect <image>` or even `docker history <image>` but these are not very practical commands to handle.

This is why the tool [Dive](https://github.com/wagoodman/dive){:target="_blank" rel="noopener noreferrer nofollow"} will allow us to dive into the heart of our images Docker/OCI and allow us to finally simply know what they contain.


<hr class="hr-text" data-content="Content">

* TOC 
{:toc}

<hr class="hr-text" data-content="Features">

## Features

Let's review the features of the tool and see what it can do for us:

- Display of the content of the Docker image, for each ***layer*** of the image, it is possible to navigate in its **filesystem**
- Indication of **modifications** at the level of each ***layer*** (addition, modification, deletion)
- Estimation of a **image efficiency** score
- Integration into a **CI** possible to calculate the **image efficiency** and define a blocking limit

<hr class="hr-text" data-content="Demo">

## Demonstration

Let's see a concrete case and analyze an image generated by Builpacks and Spring Native:

<script id="asciicast-ra66cmrst0hNBQ9hngDpbaMUl" src="https://asciinema.org/a/ra66cmrst0hNBQ9hngDpbaMUl.js" async> </script>

What does the Dive tool teach us:
- Our image is made of 6 ***layers*** of which we can see the changes they operate in the ***filesystem***
- Of the 82 MB of the image, 481 bytes can be recovered, which means not much, hence the ***image efficiency*** score of 99%
- The visual aspect of the tool makes the actions of the different layers more understandable: addition of a `cnb` user, addition of the executable in the `worskpace` directory, ...


## Conclusion

This simple tool should allow any developer to understand the impact of each line of their **Dockerfile**. In addition, as image size is increasingly critical in the context of deployments, it is also a way to impose a limit or at least a level of quality.

And you what do you think ?

Cheers ...
